{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"library(knitr)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatch(unloadNamespace(package), error = function(e) {\n    P <- if (!is.null(cc <- conditionCall(e))) \n        paste(\"Error in\", deparse(cc)[1L], \": \")\n    else \"Error : \" ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchList(expr, classes, parentenv, handlers)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"value[[3L]](cond)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(gettextf(\"Package %s version %s cannot be unloaded:\\n %s\", \n    sQuote(package), oldversion, paste0(P, conditionMessage(e), \n        \"\\n\")), domain = NA)","line_number":0}],"message":"Error in value[[3L]](cond) : \n  Package ‘knitr’ version 1.28 cannot be unloaded:\n Error in unloadNamespace(package) : namespace ‘knitr’ is imported by ‘rmarkdown’ so cannot be unloaded\n"}