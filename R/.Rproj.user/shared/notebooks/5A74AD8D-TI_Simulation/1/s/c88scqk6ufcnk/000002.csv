"0","## Our model parameters"
"0","# id = subjNr"
"0","# dv = prop"
"0","# within = pairType"
"0","# between = cond"
"0","# type = 3"
"0","# 0 = wake"
"0","# 1 = sleep"
"0","# 0 = prem"
"0","# 1 = inference"
"0","set.seed(1234)                  ## initial seed, not important for interpretation"
"0","intercept = 0.5                 ## knowing that dv is between 0 and 1"
"0","beta.condition = 0.5              ## knowing that dv is between 0 and 1"
"0","nr.simulations = 200"
"0","residual.variation = 1          ## used as sd for simulating random numbers with mean 0"
"0","alpha = 0.05"
"0","sample.sim.size = 240"
"0","sample.mod.size = 80            ## actual sample size entering the model"
"0","sample.size.Y = 2000"
"0","# Store p-values here:                  ## rep is just making a space in the variable"
"0","p.vals=rep(x=0, time= nr.simulations)   ## creating empty variable for p values with size of number of simulations"
"0","c.d=rep(x=0, time= nr.simulations)      ## creating empty variable for standardized dependent variable set with size of number of simulations"
"0","c = c(1,1,0,0)"
"0","subj = rep(1:60, each=4)"
"0","subj = as.integer(subj)"
"0","cond = rep(0:1, each=2, len=240)"
"0","cond = as.factor(cond)"
"0","pairType = rep(0:1, 120)"
"0","pairType = as.factor(pairType)"
"0","## columns for simulated df"
"0","subj = rep(1:60, each=4)"
"0","cond = rep(0:1, each=2, len=240)"
"0","pairType = rep(0:1, 120)"
"0","for(a in 1:nr.simulations){"
"0","        "
"0","	# Sample condition and gender."
"0","	# condition.sample = sample(c(0,1), size= sample.sim.size, replace=T)"
"0","	# condition.sample_pair = sample(c(0,1), size= sample.sim.size, replace=T)"
"0","        "
"0","        condition.sample = cond"
"0","        condition.sample_pair = pairType"
"0","	"
"0","	# Simulate data. "
"0","        "
"0","        Y = rnorm(n= sample.size.Y, sd=residual.variation, mean=0)"
"0","        "
"0","	Y = round(Y,2)                                      ## rounding number to non decimal"
"0","	"
"0","	Y = as.data.frame(Y)"
"0","	Y = Y[Y$Y >= 0 & Y$Y <=1, ]"
"0","	Y = Y[1:240]"
"0","	Y = as.numeric(Y)"
"0","        "
"0","        "
"0","	Y = intercept + beta.condition* condition.sample * condition.sample_pair + Y"
"0","	"
"0","# "
"0","	condition.sample = as.factor(condition.sample)"
"0","	condition.sample_pair = as.factor(condition.sample_pair)"
"0","	subj = as.integer(subj)"
"0","	sim.data = data.frame(cbind(subj, condition.sample, condition.sample_pair, Y))"
"0","	                        ## creating df with two columns - condition"
"0","	                                                    ## and y as dv"
"0","	names(sim.data) <- c(""subj"", ""cond"", ""pairType"", ""Y"")"
"0","	# (2) Running the model"
"0","	# Select sample"
"0","	sim.data.sub = sim.data[1:sample.mod.size, ]  ## selecting smaller                                                                                       data set given above as                                                                                    sample.mod.size"
"0","#"
"0","	full.model_tidy = aov_ez("
"0","        data = sim.data.sub,"
"0","        id = ""subj"","
"0","        dv = ""Y"","
"0","        within = c(""pairType"", ""cond""),"
"0","        type = 3"
"0","        )"
"0","        "
"0","	# full.model.sum = summary(full.model_tidy)                   ## getting summary"
"0","	"
"0","	p.vals[a] <- full.model_tidy$anova_table[3,6]         ## locating p value from the summary table"
"0","	"
"0","}"
"0","# Look at the result."
"0","sum(p.vals<0.05)/nr.simulations       ## get a proportion of significant values"
"1","[1]"
"1"," 0.975"
"1","
"
"0","sum_p = sum(p.vals<0.05)"
