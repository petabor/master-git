"0","## wide format of individual pairs - if I want to explore closer the types"
"0","## proportions calculated for individual pair from total number of blocks"
"0","df_prem_middle_ts_wide_each ="
"0","        df_prem_middle_ts %>%"
"0","        dplyr::select(-c(pairType, tot)) %>%"
"0","        group_by(participant) %>%"
"0","        mutate(temp = 1:n()) %>%"
"0","        unite(combi, lettPos, temp) %>%"
"0","        spread(combi, prop)"
"0","## wide format for middle premise pairs and inference, averaged together "
"0","df_prem_middle_ts_wide_avg ="
"0","        df_prem_middle_ts %>%"
"0","        dplyr::select(-c(lettPos, prop)) %>%"
"0","        group_by(participant, pairType, condition) %>%"
"0","        dplyr::summarise("
"0","                tot = sum(tot),"
"0","                n = sum(n)"
"0","        ) %>%"
"0","        mutate(prop = tot/n) %>%"
"0","        dplyr::select(-c(tot, n)) %>%"
"0","        spread(pairType, prop)"
"2","`summarise()` regrouping output by 'participant', 'pairType' (override with `.groups` argument)
"
